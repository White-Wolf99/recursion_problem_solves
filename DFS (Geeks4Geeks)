class Solution {
  public:
    
    void solve(unordered_map<int, vector<int>> &adj, vector<bool> &visited, int u, vector<int> &res){
        if(visited[u]){
            return;
        }
        visited[u] = true;
        res.push_back(u);
        
        for(int &v: adj[u]){
            if(!visited[v]){
                solve(adj, visited, v, res);
            }
        }
    }
    
    vector<int> dfs(vector<vector<int>>& mp) {
        // Code here
        unordered_map<int, vector<int>> adj;
        
        for(int i = 0; i<mp.size(); i++){
            for(int j = 0; j<mp[i].size(); j++){
                adj[i].push_back(mp[i][j]);
            }
        }
        
        vector<int> res;
        vector<bool> visited(mp.size(),false);
        solve(adj, visited, 0, res);
        return res;
    }
};
