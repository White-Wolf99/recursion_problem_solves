class Solution {
  public:
    vector <string> result;
    void solve(int i, int j, vector<vector<int>> &mat, string &temp){
        
        int n = mat.size();
        
        if(i<0 || i>= n || j<0 || j>=n || mat[i][j] == 0){
            return;
        }
        if(i == n-1 && j == n-1){
            result.push_back(temp);
            return;
        }
        
        
        mat[i][j] = 0;
        //right
        temp.push_back('R');
        solve(i, j+1, mat, temp);
        temp.pop_back();
        
        //left
        temp.push_back('L');
        solve(i, j-1, mat, temp);
        temp.pop_back();
        
        //up
        temp.push_back('U');
        solve(i-1, j, mat, temp);
        temp.pop_back();
        
        //down
        temp.push_back('D');
        solve(i+1, j, mat, temp);
        temp.pop_back();
        
        mat[i][j] = 1;
        
    }
    
    vector<string> findPath(vector<vector<int>> &mat) {
        string temp = "";
        solve(0, 0, mat, temp);
        
        return result;
    }
};
