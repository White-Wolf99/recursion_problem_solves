/* Node structure  used in the program

struct Node{
    int data;
    struct Node * next;
    struct Node * bottom;

    Node(int x){
        data = x;
        next = NULL;
        bottom = NULL;
    }

};
*/

class Solution {
  public:
    // Function which returns the  root of the flattened linked list.
    Node *merge2lists(Node *list1, Node *list2){
        if(!list1){
            return list2;
        }else if(!list2){
            return list1;
        }else if(!list1 && !list2){
            return NULL;
        }
        Node *res = NULL;
        if(list1->data <= list2->data){
            res = list1;
            res->bottom = merge2lists(list1->bottom, list2);
        }else{
            res = list2;
            res->bottom = merge2lists(list1, list2->bottom);
        }
        return res;
        
    }
    
    
    Node *flatten(Node *root) {
        // Your code here
        if(root == NULL){
            return root;
        }
        Node *head = flatten (root->next);
        return merge2lists(root, head);
    }
};
